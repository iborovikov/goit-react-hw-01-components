{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/Friend-list.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/Transaction-history.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","stats__item","label","quantity","getRandom","min","max","Math","ceil","random","Statistics","title","statistics","stat__list","map","id","percentage","randomColor","item","style","backgroundColor","defaultProps","FriendListItem","isOnline","status","width","FriendList","friends","friend__list","TransactionHistory","items","transaction__history","table__head","index","type","amount","currency","bcg","data","Container","children","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32749ec3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1o2FW\",\"description\":\"Profile_description__16ZmC\",\"avatar\":\"Profile_avatar__2SaM-\",\"name\":\"Profile_name__EwIgw\",\"tag\":\"Profile_tag__3mIeW\",\"location\":\"Profile_location__QjaZY\",\"stats\":\"Profile_stats__YNHef\",\"stats__item\":\"Profile_stats__item__33kyM\",\"label\":\"Profile_label__1Y3wI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend__list\":\"Friend-list_friend__list__1_z11\",\"item\":\"Friend-list_item__mSz5X\",\"status\":\"Friend-list_status__BVl5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2LFVl\",\"title\":\"Statistics_title__3qCPG\",\"stat__list\":\"Statistics_stat__list__g0ze9\",\"item\":\"Statistics_item__1r-N1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction__history\":\"Transaction-history_transaction__history__2WqWg\",\"table__head\":\"Transaction-history_table__head__2-kId\",\"data\":\"Transaction-history_data__3nhRk\"};","import PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats: { followers, views, likes } }) => (\r\n    <div className={ styles.profile }>\r\n        <div className={ styles.description }>\r\n            <img\r\n                src={avatar}\r\n                alt={name}\r\n                className={ styles.avatar }\r\n            />\r\n            <p className={ styles.name }>{name}</p>\r\n            <p className={ styles.tag }>@{tag}</p>\r\n            <p className={ styles.location }>{location}</p>\r\n        </div>\r\n\r\n        <ul className={ styles.stats }>\r\n            <li className={ styles.stats__item }>\r\n                <span className={ styles.label }>Followers</span>\r\n                <span className={ styles.quantity }>{followers}</span>\r\n            </li>\r\n            <li className={ styles.stats__item }>\r\n                <span className={ styles.label }>Views</span>\r\n                <span className={ styles.quantity }>{views}</span>\r\n            </li>\r\n            <li className={ styles.stats__item }>\r\n                <span className={ styles.label }>Likes</span>\r\n                <span className={ styles.quantity }>{likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired\r\n    }).isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction getRandom(min, max){\r\n  return Math.ceil(Math.random() * (max - min) + min)\r\n}\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n    <section className={ styles.statistics }>\r\n        <h2 className={ styles.title }>{title}</h2>\r\n        <ul className={ styles.stat__list }>\r\n              {stats.map(({ id, label, percentage }) => {\r\n                const randomColor = `rgb(${getRandom(0, 240)}, ${getRandom(0, 240)}, ${getRandom(0, 240)})`\r\n                return (\r\n                (<li className={styles.item} key={id} style={{ backgroundColor: randomColor }}>\r\n                <span className={ styles.label }>{label}</span>\r\n                <span className={ styles.percentage }>{percentage}%</span>\r\n            </li>)\r\n            )\r\n            })}\r\n        </ul>\r\n    </section>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.defaultProps = {\r\n    title: \"Upload stats\"\r\n};\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired\r\n    })).isRequired\r\n};","import PropTypes from 'prop-types';\r\nimport styles from './Friend-list.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n    const getStatusColor = () => {\r\n        if (isOnline) {\r\n            return 'green'\r\n        }\r\n        return 'red'\r\n    };\r\n    return (\r\n    <>\r\n        <span className={styles.status} style={{ backgroundColor: getStatusColor() }}></span>\r\n        <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n        <p className={styles.name}>{name}</p>\r\n    </>\r\n);\r\n\r\n    \r\n} \r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired\r\n}","import FriendListItem from './FriendListItem'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Friend-list.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul className={styles.friend__list}>\r\n        {friends.map(({ avatar, name, isOnline, id }) => (\r\n            <li className={styles.item} key={id}>\r\n                <FriendListItem\r\n                    avatar={avatar}\r\n                    name={name}\r\n                    isOnline={isOnline}\r\n                    id={id}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n        avatar: PropTypes.string.isRequired\r\n    })).isRequired\r\n}","import PropTypes from 'prop-types';\r\nimport styles from './Transaction-history.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n    <table className={styles.transaction__history}>\r\n        <thead className={styles.table__head}>\r\n            <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            {items.map(({ id, type, amount, currency }, index) => {\r\n\r\n                const bcg = () => {\r\n                    if (index % 2 === 0) {\r\n                        return 'white'\r\n                    }\r\n                    return 'seashell'\r\n                }\r\n                return (\r\n                <tr key={id}>\r\n                    <td className={styles.data} style={{ backgroundColor: bcg() }}>{type}</td>\r\n                    <td className={styles.data} style={{ backgroundColor: bcg() }}>{amount}</td>\r\n                    <td className={styles.data} style={{ backgroundColor: bcg() }}>{currency}</td>\r\n                </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n    </table>\r\n);\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired\r\n    })).isRequired\r\n}","import './container.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"Container\">{ children }</div>\r\n)\r\n\r\nexport default Container;","import user from './Data/user.json';\nimport statisticalData from './Data/statistical-data.json'\nimport friends from './Data/friends.json';\nimport transactions from './Data/transactions.json';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics'\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\n\nimport Container from './components/Container/Container'\n\nconst App = () => (\n  <Container>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n    </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}